services:
  vllm-engine:
    image: "${VLLM_REPO}:${VLLM_TAG}"
    container_name: vllm-engine
    environment:
      NVIDIA_VISIBLE_DEVICES: "${VLLM_CUDA_VISIBLE_DEVICES}"
      NUM_DEVICES: "${VLLM_NUM_DEVICES}"
      CKPT_PATH: /model
      HF_HUB_CACHE: /model
      HF_TOKEN: ${HF_TOKEN}
    hostname: vllm-engine
    ports:
      - 9002:9002
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    volumes:
      - ${HF_HUB_CACHE}:/model
    command: >
      --served-model-name model
      --model ${HF_MODEL_NAME}
      --load-format safetensors
      --port 9002
      --tensor-parallel-size ${VLLM_NUM_DEVICES}
    networks:
      - promnet

  vllm-exp-exposer:
    image: friendliai/llm-serving-perf-evaluator:latest
    container_name: vllm-exp-exposer
    hostname: vllm-exp-exposer
    ports:
      - 8803:8803
    volumes:
      - ${HF_HUB_CACHE}:/model
      - ${RESULT_DIR}:/home/exp/result
      - ${CONFIG_DIR}:/home/exp/config
    environment:
      HF_MODEL_NAME: ${HF_MODEL_NAME}
      HF_HUB_CACHE: /model
    command: >
      --engine vllm
      --model-name ${HF_MODEL_NAME}
      --port 9002
      --request-rate ${REQUEST_RATES}
      --request-config-path ./config/request_config/vllm.yaml
      --workload-config-path ./config/workload_config/dummy.yaml
      --use-token
      --verbose
      --output-dir ./result
      --host vllm-engine
      --metrics-host vllm-exp-exposer
      --duration ${DURATION}
      --timeout ${TIMEOUT}
      --metrics-port 8803
    networks:
      - promnet

  init_prometheus:
    image: prom/prometheus:v2.44.0
    user: root
    environment:
      - UID=${UID}
    entrypoint:
      - /bin/sh
      - -c
      - |
        chown -R ${UID}:${UID} /prometheus
    volumes:
      - ./prometheus/volume:/prometheus

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    hostname: prometheus
    environment:
      - UID=${UID}
    user: ${UID}:${UID}
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/volume:/prometheus
    command:
      - --web.enable-lifecycle
      - --web.enable-admin-api
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - init_prometheus
      - vllm-exp-exposer
    networks:
      - promnet

  init_grafana:
    image: grafana/grafana:latest
    user: root
    environment:
      - UID=${UID}
    entrypoint:
      - /bin/sh
      - -c
      - |
        chown -R ${UID}:${UID} /var/lib/grafana
    volumes:
      - ./grafana/volume:/var/lib/grafana

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    hostname: grafana
    environment:
      - UID=${UID}
    user: ${UID}:${UID}
    ports:
      - 3000:3000
    volumes:
      - ./grafana/volume:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - promnet

networks:
  promnet:
    driver: bridge
